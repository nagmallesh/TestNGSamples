<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="3" total="23" passed="19">
  <reporter-output>
    <line>
      <![CDATA[name..Jhon]]>
    </line>
    <line>
      <![CDATA[age..20]]>
    </line>
    <line>
      <![CDATA[mobile_num..990123455]]>
    </line>
    <line>
      <![CDATA[Male..false]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="103" started-at="2021-02-10T07:56:55Z" finished-at="2021-02-10T07:56:55Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="19" started-at="2021-02-10T07:56:55Z" finished-at="2021-02-10T07:56:55Z">
      <class name="com.TestNGTutorials.TestNg_Include_Exclude">
        <test-method status="PASS" signature="testCase1()[pri:0, instance:com.TestNGTutorials.TestNg_Include_Exclude@6574b225]" name="testCase1" duration-ms="7" started-at="2021-02-10T13:26:55Z" description="sampletest" finished-at="2021-02-10T13:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="testMobileCase1()[pri:0, instance:com.TestNGTutorials.TestNg_Include_Exclude@6574b225]" name="testMobileCase1" duration-ms="1" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMobileCase1 -->
        <test-method status="PASS" signature="testMobileCase2()[pri:0, instance:com.TestNGTutorials.TestNg_Include_Exclude@6574b225]" name="testMobileCase2" duration-ms="1" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMobileCase2 -->
      </class> <!-- com.TestNGTutorials.TestNg_Include_Exclude -->
    </test> <!-- Test -->
    <test name="dependencyTest" duration-ms="4" started-at="2021-02-10T07:56:55Z" finished-at="2021-02-10T07:56:55Z">
      <class name="com.TestNGTutorials.TestNGHardAssertions">
        <test-method status="FAIL" signature="testExportData()[pri:0, instance:com.TestNGTutorials.TestNGHardAssertions@d2cc05a]" name="testExportData" duration-ms="2" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[serviceid wrong expected [12] but found [18]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: serviceid wrong expected [12] but found [18]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at com.TestNGTutorials.TestNGHardAssertions.testExportData(TestNGHardAssertions.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExportData -->
      </class> <!-- com.TestNGTutorials.TestNGHardAssertions -->
    </test> <!-- dependencyTest -->
    <test name="parametersTest" duration-ms="3" started-at="2021-02-10T07:56:55Z" finished-at="2021-02-10T07:56:55Z">
      <class name="com.TestNGTutorials.TestNG_Parameters">
        <test-method status="PASS" signature="testParametersTestForRegistrationForm(java.lang.String, int, long, boolean)[pri:0, instance:com.TestNGTutorials.TestNG_Parameters@675d3402]" name="testParametersTestForRegistrationForm" duration-ms="1" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jhon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[990123455]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[name..Jhon]]>
            </line>
            <line>
              <![CDATA[age..20]]>
            </line>
            <line>
              <![CDATA[mobile_num..990123455]]>
            </line>
            <line>
              <![CDATA[Male..false]]>
            </line>
          </reporter-output>
        </test-method> <!-- testParametersTestForRegistrationForm -->
      </class> <!-- com.TestNGTutorials.TestNG_Parameters -->
    </test> <!-- parametersTest -->
    <test name="retryanalyzer" duration-ms="5" started-at="2021-02-10T07:56:55Z" finished-at="2021-02-10T07:56:55Z">
      <class name="com.TestNGTutorials.TestNGRetryAnalyzer.RetryTest">
        <test-method status="FAIL" signature="testRetry()[pri:0, instance:com.TestNGTutorials.TestNGRetryAnalyzer.RetryTest@39aeed2f]" name="testRetry" duration-ms="1" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.TestNGTutorials.TestNGRetryAnalyzer.RetryTest.testRetry(RetryTest.java:9)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:991)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1171)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetry -->
        <test-method status="FAIL" signature="testRetry()[pri:0, instance:com.TestNGTutorials.TestNGRetryAnalyzer.RetryTest@39aeed2f]" name="testRetry" duration-ms="0" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.TestNGTutorials.TestNGRetryAnalyzer.RetryTest.testRetry(RetryTest.java:9)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:991)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1171)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetry -->
      </class> <!-- com.TestNGTutorials.TestNGRetryAnalyzer.RetryTest -->
    </test> <!-- retryanalyzer -->
    <test name="dptest" duration-ms="50" started-at="2021-02-10T07:56:55Z" finished-at="2021-02-10T07:56:55Z">
      <class name="com.TestNGTutorials.TestNGDataProvider.test_DataProvider1">
        <test-method status="PASS" signature="init()[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="init" is-config="true" duration-ms="3" started-at="2021-02-10T13:26:55Z" finished-at="2021-02-10T13:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testMultipleLoginNames(java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testMultipleLoginNames" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="loginNames" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[smith]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoginNames -->
        <test-method status="PASS" signature="testMultipleLoginNames(java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testMultipleLoginNames" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="loginNames" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[jhon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleLoginNames -->
        <test-method status="PASS" signature="testStudentData(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentData" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="studentdp" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[jhon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentData -->
        <test-method status="PASS" signature="testStudentData(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentData" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentdp" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[smith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentData -->
        <test-method status="PASS" signature="testStudentData(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentData" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentdp" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[alex]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentData -->
        <test-method status="SKIP" signature="testStudentRecordsFromExcel(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromExcel" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="excelDp" finished-at="2021-02-10T13:26:55Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.apache.poi.poifs.filesystem.OfficeXmlFileException: The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.apache.poi.poifs.filesystem.OfficeXmlFileException: The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:162)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:441)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1300)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1015)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1104)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.apache.poi.poifs.filesystem.OfficeXmlFileException: The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)
	at org.apache.poi.poifs.storage.HeaderBlock.<init>(HeaderBlock.java:128)
	at org.apache.poi.poifs.storage.HeaderBlock.<init>(HeaderBlock.java:112)
	at org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:300)
	at org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:400)
	at org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:381)
	at com.TestNGTutorials.TestNGDataProvider.test_DataProvider1.ReadVariant(test_DataProvider1.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:136)
	... 20 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromExcel -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[leach]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[martin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Benzman]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bernard]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[frank]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[80]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[smith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="0" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[jhon]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nicholos]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[alex]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
        <test-method status="PASS" signature="testStudentRecordsFromProps(java.lang.String, java.lang.String)[pri:0, instance:com.TestNGTutorials.TestNGDataProvider.test_DataProvider1@42d80b78]" name="testStudentRecordsFromProps" duration-ms="1" started-at="2021-02-10T13:26:55Z" data-provider="studentrecords" finished-at="2021-02-10T13:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStudentRecordsFromProps -->
      </class> <!-- com.TestNGTutorials.TestNGDataProvider.test_DataProvider1 -->
    </test> <!-- dptest -->
  </suite> <!-- Suite -->
</testng-results>
